{"version":3,"file":"static/js/477.07ea2988.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?ab21","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileStatus.module.scss?a2cc","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.scss?f7c8","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.scss?39f4","components/Profile/MyPosts/Post/Post.tsx","components/common/FormsControls/FormikControls.ts","webpack://my-app/./src/components/Profile/MyPosts/AddNewPostForm.module.scss?bc2a","components/Profile/MyPosts/AddNewPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://my-app/./src/components/Profile/Profile.module.scss?d6ae","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withAuthRedirect.tsx","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.scss?c1c8"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"preloader\":\"ProfileInfo_preloader__U7OiM\",\"profileDataFormWrapper\":\"ProfileInfo_profileDataFormWrapper__Ni6w3\",\"defaultAvatar\":\"ProfileInfo_defaultAvatar__eamlK\",\"avatar\":\"ProfileInfo_avatar__MrKrS\",\"contact\":\"ProfileInfo_contact__ZAl27\",\"formSummaryError\":\"ProfileInfo_formSummaryError__24zSM\",\"profileName\":\"ProfileInfo_profileName__n0CjC\",\"imageWithChangeWrapper\":\"ProfileInfo_imageWithChangeWrapper__+0Vfh\",\"profileDataForm\":\"ProfileInfo_profileDataForm__ddHWz\",\"chooseImage\":\"ProfileInfo_chooseImage__AbDPf\",\"chooseAvatarLabel\":\"ProfileInfo_chooseAvatarLabel__pW95X\",\"imageBackground\":\"ProfileInfo_imageBackground__Kin6v\",\"editProfileBtn\":\"ProfileInfo_editProfileBtn__oAbub\",\"cancelProfileBtn\":\"ProfileInfo_cancelProfileBtn__YhYbV\",\"MainEditedForm\":\"ProfileInfo_MainEditedForm__4tOQY\",\"leftColFormData\":\"ProfileInfo_leftColFormData__C5XMb\",\"nameBlock\":\"ProfileInfo_nameBlock__HSfph\",\"ProfessionalSkillsBlock\":\"ProfileInfo_ProfessionalSkillsBlock__zFrHA\",\"AboutMeBlock\":\"ProfileInfo_AboutMeBlock__XAsEq\",\"Contacts\":\"ProfileInfo_Contacts__fOoad\",\"profileInfo\":\"ProfileInfo_profileInfo__sA3y1\",\"profileInfoForm\":\"ProfileInfo_profileInfoForm__w4gBV\",\"leftColForm\":\"ProfileInfo_leftColForm__w3+4M\",\"leftColFormNameContainer\":\"ProfileInfo_leftColFormNameContainer__lKnmx\",\"leftColFormName\":\"ProfileInfo_leftColFormName__VCokx\",\"myProffessionalSkillsContainer\":\"ProfileInfo_myProffessionalSkillsContainer__Jo3dG\",\"myProffessionalSkills\":\"ProfileInfo_myProffessionalSkills__mDitr\",\"aboutMeContainer\":\"ProfileInfo_aboutMeContainer__Q4ufJ\",\"aboutMe\":\"ProfileInfo_aboutMe__SQoMj\",\"ContactsFormContainer\":\"ProfileInfo_ContactsFormContainer__aclxb\",\"ContactsFormContainerVisible\":\"ProfileInfo_ContactsFormContainerVisible__CUWjX\",\"toggleInfoVisibilityBtn\":\"ProfileInfo_toggleInfoVisibilityBtn__90KKk\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileStatus\":\"ProfileStatus_profileStatus__O5BOo\",\"statusStatus\":\"ProfileStatus_statusStatus__5Dk2W\",\"statusEditModeInput\":\"ProfileStatus_statusEditModeInput__U4JTU\",\"statusValue\":\"ProfileStatus_statusValue__R2jmV\"};","import React from \"react\";\r\nimport { ChangeEvent , useState, useEffect } from \"react\";\r\nimport n from \"./ProfileStatus.module.scss\";\r\n\r\ntype PropsType = {\r\n  status: string;\r\n  updateStatus: (newStatus: string) => void;\r\n  className?: string\r\n};\r\n\r\n\r\nconst ProfileStatusWithHooks: React.FC<PropsType> = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e: ChangeEvent <HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={n.profileStatus}>\r\n      {!editMode && (\r\n        <div>\r\n          <b className={n.statusStatus}>Status: </b>\r\n          <span onDoubleClick={activateEditMode} className={n.statusValue}>\r\n            {props.status || \"Enter your status here\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n            className={n.statusEditModeInput}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"../../common/FormsControls/FormsControls.module.scss\";\r\nimport n from \"./ProfileInfo.module.scss\";\r\nimport { ProfileType } from \"../../../redux/types/types\";\r\n\r\ntype PropsType = {\r\n  profile: ProfileType;\r\n  cancelEdit: () => void;\r\n  onSubmit: (values: ProfileType) => Promise<void>;\r\n};\r\n\r\nconst ProfileDataSchema = Yup.object().shape({\r\n  fullName: Yup.string()\r\n    .required(\"Required Field\")\r\n    .max(21, \"Must be 21 characters or less\"),\r\n  lookingForAJobDescription: Yup.string()\r\n    .required(\"Required Field\")\r\n    .max(200, \"Must be 200 characters or less\"),\r\n  aboutMe: Yup.string()\r\n    .required(\"Required Field\")\r\n    .max(200, \"Must be 200 characters or less\"),\r\n});\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({\r\n  profile,\r\n  cancelEdit,\r\n  onSubmit,\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        fullName: profile.fullName || \"\",\r\n        lookingForAJob: profile.lookingForAJob || false,\r\n        lookingForAJobDescription: profile.lookingForAJobDescription || \"\",\r\n        aboutMe: profile.aboutMe || \"\",\r\n        contacts: profile.contacts || {},\r\n        photos: profile.photos || {}\r\n      }}\r\n      validationSchema={ProfileDataSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className={n.MainEditedForm}>\r\n          <div className={n.buttons}>\r\n            <button\r\n              type=\"button\"\r\n              className={n.cancelProfileBtn}\r\n              onClick={cancelEdit}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" className={n.editProfileBtn}>\r\n              Save\r\n            </button>\r\n          </div>\r\n          <div className={n.leftColFormData}>\r\n            <div className={n.nameBlock}>\r\n              <b className={n.nameTitle}>Full name:</b>\r\n              <Field name=\"fullName\" placeholder=\"Full name\" className={styles.formControlInput} />\r\n              <ErrorMessage name=\"fullName\" component=\"span\" className={styles.error} />\r\n            </div>\r\n            <div className={n.LookingJobBlock}>\r\n              <b className={n.LookingJobTitle}>Looking for a job:</b>\r\n              <Field name=\"lookingForAJob\" type=\"checkbox\" className={styles.formCheckbox} />\r\n            </div>\r\n            <div className={n.ProfessionalSkillsBlock}>\r\n              <b className={n.ProfessionalSkillsTitle}>My professional skills:</b>\r\n              <Field\r\n                name=\"lookingForAJobDescription\"\r\n                as=\"textarea\"\r\n                placeholder=\"My professional skills\"\r\n                className={styles.formControlTextarea}\r\n              />\r\n              <ErrorMessage name=\"lookingForAJobDescription\" component=\"span\" className={styles.error} />\r\n            </div>\r\n            \r\n            <div className={n.AboutMeBlock}>\r\n              <b className={n.AboutMeTitle}>About me:</b>\r\n              <Field\r\n                name=\"aboutMe\"\r\n                as=\"textarea\"\r\n                placeholder=\"About me\"\r\n                className={styles.formControlTextarea}\r\n              />\r\n              <ErrorMessage name=\"aboutMe\" component=\"span\" className={styles.error} />\r\n            </div>\r\n          </div>\r\n          <div className={n.Contacts}>\r\n            <b className={n.ContactsTitle}>Contacts</b>\r\n            <hr style={{ marginBlock: \"10px\" }} />\r\n            {Object.keys(profile.contacts).map((key) => {\r\n              if (key === \"vk\" || key === \"mainLink\") return null;\r\n              return (\r\n                <div key={key} className={n.contactBlock}>\r\n                    <b className={n.contactTitle}>\r\n                      {key} \r\n                    </b>:\r\n                    <div>\r\n                    <Field\r\n                      name={`contacts.${key}`}\r\n                      placeholder={key}\r\n                      className={styles.formControlInput}\r\n                    />\r\n                    <ErrorMessage\r\n                      name={`contacts.${key}`}\r\n                      component=\"span\"\r\n                      className={styles.error}\r\n                    />\r\n                    </div>\r\n                 \r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport n from \"./ProfileInfo.module.scss\";\r\n//@ts-ignore\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n//@ts-ignore\r\nimport userPhoto from \"../../../assets/images/icons/noPhoto.svg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport { ContactsType, ProfileType } from \"../../../redux/types/types\";\r\n\r\nexport type ProfileInfoType = {\r\n  profile: ProfileType;\r\n  status: string;\r\n  updateStatus: (status: string) => void;\r\n  isOwner: boolean;\r\n  saveProfile: (profile: ProfileType) => Promise<any>;\r\n  savePhoto: (file: File) => void;\r\n};\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoType> = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  saveProfile,\r\n  savePhoto,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onSubmit = (formData: ProfileType): Promise<void> => {\r\n    return saveProfile(formData)\r\n      .then(() => {\r\n        setEditMode(false);\r\n        setErrorMessage(\"\"); \r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error saving profile:\", error);\r\n        setErrorMessage(\"Please fill out all fields and try again.\");\r\n      });\r\n  };\r\n\r\n  const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) savePhoto(e.target.files[0]);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  return (\r\n    <div className={n.profileDataFormWrapper}>\r\n      <div className={n.imageWithChangeWrapper}>\r\n        <div className={n.bntChangeAvatar}>\r\n          <label htmlFor=\"imageInput\" className={n.chooseAvatarLabel}>\r\n            <div className={n.imageBlock}>\r\n              {profile.photos?.large ? (\r\n                <img\r\n                  src={profile.photos.large}\r\n                  alt=\"Profile\"\r\n                  className={n.avatar}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={userPhoto}\r\n                  alt=\"Default avatar\"\r\n                  className={n.defaultAvatar}\r\n                />\r\n              )}\r\n            </div>\r\n          </label>\r\n          {isOwner && (\r\n            <input\r\n              className={n.chooseImage}\r\n              id=\"imageInput\"\r\n              type=\"file\"\r\n              onChange={onMainPhotoSelected}\r\n            />\r\n          )}\r\n        </div>\r\n        <ProfileStatusWithHooks\r\n          status={status}\r\n          updateStatus={updateStatus}\r\n          className={n.profileStatus}\r\n        />\r\n      </div>\r\n\r\n      <div className={n.NameStatusFormWrapper}>\r\n        <div className={n.profileName}>\r\n          <p>{profile.fullName}</p>\r\n        </div>\r\n\r\n        <div className={n.profileDataForm}>\r\n          {editMode ? (\r\n            <ProfileDataForm\r\n              profile={profile}\r\n              cancelEdit={cancelEdit}\r\n              onSubmit={onSubmit}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              goToEditMode={() => setEditMode(true)}\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n            />\r\n          )}\r\n          {errorMessage && <div className={n.errorMessage}>{errorMessage}</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ProfileDataPropsType = {\r\n  profile: ProfileType;\r\n  isOwner: boolean;\r\n  goToEditMode: () => void;\r\n};\r\n\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({ profile, isOwner, goToEditMode }) => {\r\n  const [infoVisibility, setInfoVisibility] = useState(false);\r\n\r\n  const toggleInfoVisibility = () => {\r\n    setInfoVisibility(!infoVisibility);\r\n  };\r\n\r\n  return (\r\n    <div className={n.profileInfo}>\r\n      <div className={n.editBtnWrapper}>\r\n        {isOwner && (\r\n          <button className={n.editProfileBtn} onClick={goToEditMode}>\r\n            Edit Profile\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={n.profileInfoForm}>\r\n        <div className={n.leftColForm}>\r\n          <div className={n.leftColFormNameContainer}>\r\n            <b className={n.leftColFormName}>Full name:</b> {profile.fullName}\r\n          </div>\r\n          <div>\r\n            <b>Looking for a job:</b>{\" \"}\r\n            <span style={{ color: \"rgba(0, 0, 0, 0.8\" }}>\r\n              {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </span>\r\n          </div>\r\n          {profile.lookingForAJob && (\r\n            <div className={n.myProffessionalSkillsContainer}>\r\n              <h4 className={n.myProffessionalSkills}>My professional skills:</h4>{\" \"}\r\n              <span style={{ color: \"rgba(0, 0, 0, 0.8\" }}>\r\n                {profile.lookingForAJobDescription}\r\n              </span>\r\n            </div>\r\n          )}\r\n          <div className={n.aboutMeContainer}>\r\n            <h4 className={n.aboutMe}>About me:</h4>{\" \"}\r\n            <span style={{ color: \"rgba(0, 0, 0, 0.8\" }}>{profile.aboutMe}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <button onClick={toggleInfoVisibility} className={n.toggleInfoVisibilityBtn}>\r\n          Show all information ↓\r\n        </button>\r\n\r\n        <div\r\n          className={`${n.ContactsFormContainer} ${\r\n            infoVisibility ? n.ContactsFormContainerVisible : \"\"\r\n          }`}\r\n        >\r\n          <div className={n.ContactsFormTitleContainer}>\r\n            <b className={n.ContactsFormTitle}>Contacts:</b>\r\n            <hr style={{ marginTop: \"10px\" }} />\r\n          </div>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            if (key === \"vk\" || key === \"mainLink\") return null;\r\n            return (\r\n              <Contact\r\n                key={key}\r\n                contactTitle={key}\r\n                contactValue={profile.contacts[key as keyof ContactsType]}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ContactsPropsType = {\r\n  contactTitle: string;\r\n  contactValue: string | null;\r\n};\r\n\r\nconst Contact: React.FC<ContactsPropsType> = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={n.contact}>\r\n      <b>{contactTitle}:</b>{\" \"}\r\n      <span style={{ color: \"rgba(0, 0, 0, 0.8\" }}>{contactValue}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__WdcXG\",\"postsImageAndHeader\":\"MyPosts_postsImageAndHeader__4w2NI\",\"InputWithButton\":\"MyPosts_InputWithButton__C3f5b\",\"posts\":\"MyPosts_posts__4yLu6\",\"postsHeader\":\"MyPosts_postsHeader__PyR1g\",\"postsImage\":\"MyPosts_postsImage__S7G+H\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__8D5w5\",\"postImageWrapper\":\"Post_postImageWrapper__3FLMm\",\"postImage\":\"Post_postImage__Tt-Vd\",\"postMessage\":\"Post_postMessage__a6qhF\",\"likesAndCount\":\"Post_likesAndCount__TeX34\",\"svgLikes\":\"Post_svgLikes__XAuSF\",\"likes\":\"Post_likes__sEgZd\",\"likesCount\":\"Post_likesCount__2GuQw\",\"removeButton\":\"Post_removeButton__I5w1h\"};","import React, { useState } from \"react\";\r\nimport n from \"./Post.module.scss\";\r\n\r\ntype PropsType = {\r\n  message: string;\r\n  likesCount: number;\r\n  onRemove: () => void;\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n  const [likes, setLikes] = useState(props.likesCount);\r\n\r\n  return (\r\n    <div className={n.item}>\r\n      <div className={n.postImageWrapper}><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS94-h02nA6tjH-orlYL1CJN7kZ2QCO2ldtww&s\" alt=\"userPhoto\" className={n.postImage}></img></div>\r\n      <div className={n.postMessage}>{props.message}</div>\r\n      <div className={n.likesAndCount} onClick={() => setLikes(prevLikes => prevLikes + 1)}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"1em\"\r\n          height=\"1em\"\r\n          viewBox=\"0 0 400 400\"\r\n          className={n.svgLikes}\r\n        >\r\n          <path\r\n            fill=\"#059669\"\r\n            d=\"m472.06 334l-144.16-6.13c-4.61-.36-23.9-1.21-23.9-25.87c0-23.81 19.16-25.33 24.14-25.88L472.06 270c12.67.13 23.94 14.43 23.94 32s-11.27 31.87-23.94 32M330.61 202.33L437.35 194C450 194 464 210.68 464 227.88v.33c0 16.32-11.14 29.62-24.88 29.79l-108.45-1.73C304 253 304 236.83 304 229.88c0-22.88 21.8-27.15 26.61-27.55M421.85 480l-89.37-8.93C308 470.14 304 453.82 304 443.59c0-18.38 13.41-24.6 26.67-24.6l91-3c14.54.23 26.32 14.5 26.32 32s-11.67 31.67-26.14 32.01m34.36-71.5l-126.4-6.21c-9.39-.63-25.81-3-25.81-26.37c0-12 4.35-25.61 25-27.53l127.19-3.88c13.16.14 23.81 13.49 23.81 31.4s-10.65 32.43-23.79 32.58Z\"\r\n          />\r\n          <path\r\n            fill=\"#059669\"\r\n            d=\"M133.55 238.06A15.85 15.85 0 0 1 126 240a15.8 15.8 0 0 0 7.51-1.92Zm40.59-69.28l.13-.23zc-20.5 35.51-30.36 54.95-33.82 62c3.47-7.07 13.34-26.51 33.82-62\"\r\n          />\r\n          <path\r\n            fill=\"#059669\"\r\n            d=\"m139.34 232.84l1-2a16.27 16.27 0 0 1-6.77 7.25a16.35 16.35 0 0 0 5.77-5.25\"\r\n          />\r\n          <path\r\n            fill=\"#059669\"\r\n            d=\"M316.06 52.62C306.63 39.32 291 32 272 32a16 16 0 0 0-14.31 8.84c-3 6.07-15.25 24-28.19 42.91c-18 26.33-40.35 59.07-55.23 84.8l-.13.23c-20.48 35.49-30.35 54.93-33.82 62l-1 2a16.35 16.35 0 0 1-5.79 5.22a15.8 15.8 0 0 1-7.53 2h-25.31A84.69 84.69 0 0 0 16 324.69v38.61a84.69 84.69 0 0 0 84.69 84.7h48.79a17.55 17.55 0 0 1 9.58 2.89C182 465.87 225.34 480 272 480c7.45 0 14.19-.14 20.27-.38a8 8 0 0 0 6.2-12.68l-.1-.14C289.8 454.41 288 441 288 432a61.2 61.2 0 0 1 5.19-24.77a17.36 17.36 0 0 0 0-14.05a63.8 63.8 0 0 1 0-50.39a17.32 17.32 0 0 0 0-14a62.15 62.15 0 0 1 0-49.59a18.13 18.13 0 0 0 0-14.68A60.3 60.3 0 0 1 288 239c0-8.2 2-21.3 8-31.19a15.63 15.63 0 0 0 1.14-13.64c-.38-1-.76-2.07-1.13-3.17a24.84 24.84 0 0 1-.86-11.58c3-19.34 9.67-36.29 16.74-54.16c3.08-7.78 6.27-15.82 9.22-24.26c6.14-17.57 4.3-35.2-5.05-48.38\"\r\n          />\r\n        </svg>\r\n        <button className={n.removeButton} onClick={props.onRemove}>Remove</button>\r\n        <div className={n.likes}>likes</div>\r\n        <div className={n.likesCount}>{likes}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import * as Yup from \"yup\"; // Для валидации\r\nimport n from \"./FormikCotrols.module.scss\";\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n  newPostText: Yup.string()\r\n    .max(15, \"Max 15 symbols\")\r\n    .required(\"🠜 Required Field\"),\r\n});\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"errorText\":\"AddNewPostForm_errorText__2Y3lW\",\"postsForm\":\"AddNewPostForm_postsForm__Qi0nR\",\"addPostBtn\":\"AddNewPostForm_addPostBtn__i+HZ-\",\"postsText\":\"AddNewPostForm_postsText__BEKHe\",\"formInput\":\"AddNewPostForm_formInput__CPBrb\"};","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\n//@ts-ignore\r\nimport { validationSchema } from \"../../common/FormsControls/FormikControls\";\r\nimport n from \"./AddNewPostForm.module.scss\";\r\n//@ts-ignore\r\nimport userNoPhoto from \"../../../assets/images/icons/noPhoto.svg\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntype PropsType = {\r\n  addPost: (postText: string) => void;\r\n  profileImage: string\r\n}\r\n\r\nconst AddNewPostForm: React.FC<PropsType> = (props) => {\r\n  /* Toastify */\r\n  const notify = () =>\r\n    toast.success(\"Post Added!\", {\r\n      position: \"bottom-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      transition: Flip,\r\n    });\r\n\r\n  return (\r\n    <div className={n.AddPostsForm}>\r\n      <Formik\r\n        initialValues={{ newPostText: \"\" }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          props.addPost(values.newPostText);\r\n          resetForm();\r\n          notify();\r\n        }}\r\n      >\r\n        <Form>\r\n          <div className={n.postsText}>\r\n            <img className={n.postsImage} src={props.profileImage || userNoPhoto} alt=\"post-image\" style={{width: '40px', borderRadius: '30px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.2)'}}/>\r\n              <Field\r\n                name=\"newPostText\"\r\n                as=\"textarea\"\r\n                placeholder=\"Post message\"\r\n                className={n.formInput}\r\n              />\r\n              <ErrorMessage\r\n                name=\"newPostText\"\r\n                component=\"Form\"\r\n                className={n.errorText}\r\n              />\r\n            <button className={n.addPostBtn} type=\"submit\">\r\n              Add Post\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <ToastContainer />\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewPostForm;\r\n","// MyPosts.tsx\r\n\r\nimport React from \"react\";\r\nimport n from \"./MyPosts.module.scss\";\r\nimport Post from \"./Post/Post\";\r\nimport AddNewPostForm from \"./AddNewPostForm\";\r\nimport { PostType } from \"../../../redux/types/types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actions } from \"../../../redux/profile-reducer\";\r\n\r\nimport { toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport type MapPropsType = {\r\n  posts: Array<PostType>;\r\n};\r\n\r\nexport type DispatchPropsType = {\r\n  addPost: (newPostText: string) => void;\r\n};\r\n\r\nconst MyPosts: React.FC<MapPropsType & DispatchPropsType> = React.memo((props) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const profileImage = useSelector((state: any) => state.profilePage.profile?.photos?.small)\r\n\r\n  const postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} \r\n    onRemove={() => {\r\n      dispatch(actions.removePostActionCreator(p.id)); \r\n      notify();\r\n      }\r\n    }\r\n    />\r\n  ));\r\n\r\n  const onAddPost = (newPostText: string) => {\r\n    props.addPost(newPostText);\r\n  };\r\n\r\n  /* Toastify */\r\n  const notify = () =>\r\n    toast.info(\"Post Removed!\", {\r\n      position: \"bottom-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      transition: Flip,\r\n    });\r\n\r\n  return (\r\n    <div className={n.postsBlock}>\r\n      <div className={n.postsImageAndHeader}>\r\n        <h3 className={n.postsHeader}>My Posts</h3>\r\n      </div>\r\n      <div className={n.InputWithButton}>\r\n        <AddNewPostForm addPost={onAddPost} profileImage={profileImage}/>\r\n      </div>\r\n      <div className={n.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import {actions} from \"../../../redux/profile-reducer\";\r\nimport MyPosts, {DispatchPropsType, MapPropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from '../../../redux/redux-store';\r\n \r\nconst mapStateToProps = (state: AppStateType): MapPropsType => ({\r\n    posts: state.profilePage.posts,\r\n  });\r\n  \r\n  const mapDispatchToProps: DispatchPropsType = {\r\n    addPost: actions.addPostActionCreator,\r\n  };\r\n  \r\n  const MyPostsContainer = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MyPosts);\r\n  \r\n  export default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"Profile\":\"Profile_Profile__629kk\"};","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n//@ts-ignore\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport n from \"./Profile.module.scss\";\r\nimport { ProfileType } from \"../../redux/types/types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n  profile: ProfileType | null;\r\n  status: string;\r\n  updateStatus: (status: string) => void;\r\n  isOwner: boolean;\r\n  savePhoto: (file: File) => void;\r\n  saveProfile: (profile: ProfileType) => Promise<any>;\r\n};\r\n\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n  if (!props.profile) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={n.Profile}>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner} \r\n        profile={props.profile}\r\n        saveProfile={props.saveProfile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer  />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n//@ts-ignore\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProfilePage,\r\n  getStatus,\r\n  updateStatus,\r\n  saveProfile,\r\n  savePhoto,\r\n} from \"../../redux/profile-reducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { ProfileType } from \"../../redux/types/types\";\r\n\r\n// Типизация параметров маршрута\r\ntype PathParamsType = {\r\n  userId: string | undefined;\r\n};\r\n\r\n// Типизация состояния из Redux\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>;\r\n\r\n// Типизация экшенов Redux\r\ntype DispatchPropsType = {\r\n  getProfilePage: (userId: number) => void;\r\n  getStatus: (userId: number) => void;\r\n  updateStatus: (status: string) => void;\r\n  savePhoto: (file: File) => void;\r\n  saveProfile: (profile: ProfileType) => Promise<any>;\r\n};\r\n\r\n// Итоговый тип пропсов\r\ntype PropsType = MapPropsType & DispatchPropsType;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n  redirectToMainUser() {\r\n    //@ts-ignore\r\n    const { userId } = this.props.match.params;\r\n    let actualUserId = userId || this.props.authorizedUserId?.toString();\r\n    \r\n    if (actualUserId) {\r\n      this.props.getProfilePage(+actualUserId);\r\n      this.props.getStatus(+actualUserId);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.redirectToMainUser();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    //@ts-ignore\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.redirectToMainUser();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n      //@ts-ignore\r\n        isOwner={!this.props.match.params.userId}\r\n        savePhoto={this.props.savePhoto}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// Функция для получения параметров маршрута\r\nconst withRouter = (Component: React.ComponentType<PropsType>) => {\r\n  return (props: PropsType) => {\r\n    const params = useParams<PathParamsType>();\r\n    //@ts-ignore\r\n    return <Component {...props} match={{ params }} />;\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfilePage,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\n\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from '../redux/redux-store';\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n} as MapPropsType);\r\ntype MapPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype DispatchPropsType = {\r\n}\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Navigate to='/login'/>\r\n        //@ts-ignore\r\n        return <WrappedComponent {...restProps as WCP}/>\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect<MapPropsType, DispatchPropsType, WCP, AppStateType>(\r\n        mapStateToPropsForRedirect, {})\r\n    (RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControlInput\":\"FormsControls_formControlInput__IH6cE\",\"formControlTextarea\":\"FormsControls_formControlTextarea__ymXUO\",\"formCheckbox\":\"FormsControls_formCheckbox__eG9he\",\"error\":\"FormsControls_error__b4P29\",\"formControl\":\"FormsControls_formControl__sC1cx\",\"formSummaryError\":\"FormsControls_formSummaryError__RnVQJ\",\"createField\":\"FormsControls_createField__zvZ-q\"};"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","className","n","children","_jsx","onDoubleClick","activateEditMode","autoFocus","onBlur","deactivateEditMode","updateStatus","onChange","e","currentTarget","value","ProfileDataSchema","Yup","shape","fullName","required","max","lookingForAJobDescription","aboutMe","_ref","profile","cancelEdit","onSubmit","Formik","initialValues","lookingForAJob","contacts","photos","validationSchema","_ref2","errors","touched","Form","MainEditedForm","buttons","type","cancelProfileBtn","onClick","editProfileBtn","leftColFormData","nameBlock","nameTitle","Field","name","placeholder","styles","formControlInput","ErrorMessage","component","error","LookingJobBlock","LookingJobTitle","formCheckbox","ProfessionalSkillsBlock","ProfessionalSkillsTitle","as","formControlTextarea","AboutMeBlock","AboutMeTitle","Contacts","ContactsTitle","style","marginBlock","Object","keys","map","key","contactBlock","contactTitle","concat","ProfileData","isOwner","goToEditMode","infoVisibility","setInfoVisibility","profileInfo","editBtnWrapper","profileInfoForm","leftColForm","leftColFormNameContainer","leftColFormName","color","myProffessionalSkillsContainer","myProffessionalSkills","aboutMeContainer","toggleInfoVisibility","toggleInfoVisibilityBtn","ContactsFormContainer","ContactsFormContainerVisible","ContactsFormTitleContainer","ContactsFormTitle","marginTop","Contact","contactValue","_ref3","contact","_profile$photos","saveProfile","savePhoto","errorMessage","setErrorMessage","Preloader","profileDataFormWrapper","imageWithChangeWrapper","bntChangeAvatar","htmlFor","chooseAvatarLabel","imageBlock","large","src","alt","avatar","userPhoto","defaultAvatar","chooseImage","id","_e$target$files","target","files","length","ProfileStatusWithHooks","profileStatus","NameStatusFormWrapper","profileName","profileDataForm","ProfileDataForm","formData","then","catch","console","likes","setLikes","likesCount","message","prevLikes","xmlns","width","height","viewBox","fill","d","onRemove","newPostText","AddPostsForm","values","resetForm","addPost","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","Flip","postsText","postsImage","profileImage","userNoPhoto","borderRadius","boxShadow","formInput","errorText","addPostBtn","ToastContainer","React","dispatch","useDispatch","useSelector","state","_state$profilePage$pr","_state$profilePage$pr2","profilePage","small","postsElements","posts","p","Post","actions","removePostActionCreator","notify","info","AddNewPostForm","mapDispatchToProps","addPostActionCreator","connect","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","redirectToMainUser","_this$props$authorize","userId","this","match","params","actualUserId","authorizedUserId","toString","getProfilePage","getStatus","componentDidMount","componentDidUpdate","prevProps","render","Profile","compose","auth","isAuth","Component","useParams","withAuthRedirect","mapStateToPropsForRedirect","WrappedComponent","restProps","Navigate","to"],"sourceRoot":""}